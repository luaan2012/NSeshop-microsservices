{"ast":null,"code":"import { Injectable, ɵɵdefineInjectable, EventEmitter, Component, NgZone, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport { LinkedList, isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nfunction CarouselComponent_ol_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ol_1_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r6.selectSlide(i_r5));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r4.active === true);\n  }\n}\nfunction CarouselComponent_ol_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_li_1_Template, 1, 2, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.indicatorsSlides());\n  }\n}\nfunction CarouselComponent_a_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 11);\n    ɵngcc0.ɵɵtext(1, \"Previous\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction CarouselComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r9.previousSlide());\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(2, CarouselComponent_a_4_span_2_Template, 2, 0, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.activeSlide === 0 && ctx_r1.noWrap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isBs4);\n  }\n}\nfunction CarouselComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_5_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r11.nextSlide());\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 11);\n    ɵngcc0.ɵɵtext(3, \"Next\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r2.isLast(ctx_r2.activeSlide) && ctx_r2.noWrap);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\nconst _c1 = [\"*\"];\nclass CarouselConfig {\n  constructor() {\n    /* Default interval of auto changing of slides */\n    this.interval = 5000;\n    /* Is loop of auto changing of slides can be paused */\n    this.noPause = false;\n    /* Is slides can wrap from the last to the first slide */\n    this.noWrap = false;\n    /* Show carousel-indicators */\n    this.showIndicators = true;\n    /* Slides can be paused on focus */\n    this.pauseOnFocus = false;\n    /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\n    this.indicatorsByChunk = false;\n    /* If value more then 1 — carousel works in multilist mode */\n    this.itemsPerSlide = 1;\n    /* If `true` — carousel shifts by one element. By default carousel shifts by number\n        of visible elements (itemsPerSlide field) */\n    this.singleSlideOffset = false;\n  }\n}\nCarouselConfig.ɵfac = function CarouselConfig_Factory(t) {\n  return new (t || CarouselConfig)();\n};\n/** @nocollapse */\nCarouselConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function CarouselConfig_Factory() {\n    return new CarouselConfig();\n  },\n  token: CarouselConfig,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nif (false) {\n  /** @type {?} */\n  CarouselConfig.prototype.interval;\n  /** @type {?} */\n  CarouselConfig.prototype.noPause;\n  /** @type {?} */\n  CarouselConfig.prototype.noWrap;\n  /** @type {?} */\n  CarouselConfig.prototype.showIndicators;\n  /** @type {?} */\n  CarouselConfig.prototype.pauseOnFocus;\n  /** @type {?} */\n  CarouselConfig.prototype.indicatorsByChunk;\n  /** @type {?} */\n  CarouselConfig.prototype.itemsPerSlide;\n  /** @type {?} */\n  CarouselConfig.prototype.singleSlideOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the index of the last element in the array where predicate is true, and -1\n * otherwise.\n * @template T\n * @param {?} array The source array to search in\n * @param {?} predicate find calls predicate once for each element of the array, in descending\n * order, until it finds one where predicate returns true. If such an element is found,\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n * @return {?}\n */\nfunction findLastIndex(array, predicate) {\n  /** @type {?} */\n  let l = array.length;\n  while (l--) {\n    if (predicate(array[l], l, array)) {\n      return l;\n    }\n  }\n  return -1;\n}\n/**\n * @template T\n * @param {?} array\n * @param {?} size\n * @return {?}\n */\nfunction chunkByNumber(array, size) {\n  /** @type {?} */\n  const out = [];\n  /** @type {?} */\n  const n = Math.ceil(array.length / size);\n  /** @type {?} */\n  let i = 0;\n  while (i < n) {\n    /** @type {?} */\n    const chunk = array.splice(0, i === n - 1 && size < array.length ? array.length : size);\n    out.push(chunk);\n    i++;\n  }\n  return out;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Direction = {\n  UNKNOWN: 0,\n  NEXT: 1,\n  PREV: 2\n};\nDirection[Direction.UNKNOWN] = 'UNKNOWN';\nDirection[Direction.NEXT] = 'NEXT';\nDirection[Direction.PREV] = 'PREV';\n/**\n * Base element to create carousel\n */\nclass CarouselComponent {\n  /**\n   * @param {?} config\n   * @param {?} ngZone\n   */\n  constructor(config, ngZone) {\n    this.ngZone = ngZone;\n    /* If `true` - carousel indicators indicate slides chunks\n         works ONLY if singleSlideOffset = FALSE */\n    this.indicatorsByChunk = false;\n    /* If value more then 1 — carousel works in multilist mode */\n    this.itemsPerSlide = 1;\n    /* If `true` — carousel shifts by one element. By default carousel shifts by number\n         of visible elements (itemsPerSlide field) */\n    this.singleSlideOffset = false;\n    /**\n     * Turn on/off animation. Animation doesn't work for multilist carousel\n     */\n    this.isAnimated = false;\n    /**\n     * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n     */\n    this.activeSlideChange = new EventEmitter(false);\n    /**\n     * Will be emitted when active slides has been changed in multilist mode\n     */\n    this.slideRangeChange = new EventEmitter();\n    /* Index to start display slides from it */\n    this.startFromIndex = 0;\n    this._slides = new LinkedList();\n    this._currentVisibleSlidesIndex = 0;\n    this.destroyed = false;\n    this.getActive =\n    /**\n    * @param {?} slide\n    * @return {?}\n    */\n    slide => slide.active;\n    this.makeSlidesConsistent =\n    /**\n    * @param {?} slides\n    * @return {?}\n    */\n    slides => {\n      slides.forEach(\n      /**\n      * @param {?} slide\n      * @param {?} index\n      * @return {?}\n      */\n      (slide, index) => slide.item.order = index);\n    };\n    Object.assign(this, config);\n  }\n  /**\n   * Index of currently displayed slide(started for 0)\n   * @param {?} index\n   * @return {?}\n   */\n  set activeSlide(index) {\n    if (this.multilist) {\n      return;\n    }\n    if (this._slides.length && index !== this._currentActiveSlide) {\n      this._select(index);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  get activeSlide() {\n    return this._currentActiveSlide;\n  }\n  /**\n   * Delay of item cycling in milliseconds. If false, carousel won't cycle\n   * automatically.\n   * @return {?}\n   */\n  get interval() {\n    return this._interval;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set interval(value) {\n    this._interval = value;\n    this.restartTimer();\n  }\n  /**\n   * @return {?}\n   */\n  get slides() {\n    return this._slides.toArray();\n  }\n  /**\n   * @return {?}\n   */\n  get isBs4() {\n    return !isBs3();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewInit() {\n    setTimeout(\n    /**\n    * @return {?}\n    */\n    () => {\n      if (this.singleSlideOffset) {\n        this.indicatorsByChunk = false;\n      }\n      if (this.multilist) {\n        this._chunkedSlides = chunkByNumber(this.mapSlidesAndIndexes(), this.itemsPerSlide);\n        this.selectInitialSlides();\n      }\n    }, 0);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this.destroyed = true;\n  }\n  /**\n   * Adds new slide. If this slide is first in collection - set it as active\n   * and starts auto changing\n   * @param {?} slide\n   * @return {?}\n   */\n  addSlide(slide) {\n    this._slides.add(slide);\n    if (this.multilist && this._slides.length <= this.itemsPerSlide) {\n      slide.active = true;\n    }\n    if (!this.multilist && this.isAnimated) {\n      slide.isAnimated = true;\n    }\n    if (!this.multilist && this._slides.length === 1) {\n      this._currentActiveSlide = undefined;\n      this.activeSlide = 0;\n      this.play();\n    }\n    if (this.multilist && this._slides.length > this.itemsPerSlide) {\n      this.play();\n    }\n  }\n  /**\n   * Removes specified slide. If this slide is active - will roll to another\n   * slide\n   * @param {?} slide\n   * @return {?}\n   */\n  removeSlide(slide) {\n    /** @type {?} */\n    const remIndex = this._slides.indexOf(slide);\n    if (this._currentActiveSlide === remIndex) {\n      // removing of active slide\n      /** @type {?} */\n      let nextSlideIndex = void 0;\n      if (this._slides.length > 1) {\n        // if this slide last - will roll to first slide, if noWrap flag is\n        // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n        // middle of collection, index of next slide is same to removed\n        nextSlideIndex = !this.isLast(remIndex) ? remIndex : this.noWrap ? remIndex - 1 : 0;\n      }\n      this._slides.remove(remIndex);\n      // prevents exception with changing some value after checking\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._select(nextSlideIndex);\n      }, 0);\n    } else {\n      this._slides.remove(remIndex);\n      /** @type {?} */\n      const currentSlideIndex = this.getCurrentSlideIndex();\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      () => {\n        // after removing, need to actualize index of current active slide\n        this._currentActiveSlide = currentSlideIndex;\n        this.activeSlideChange.emit(this._currentActiveSlide);\n      }, 0);\n    }\n  }\n  /**\n   * @param {?=} force\n   * @return {?}\n   */\n  nextSlideFromInterval(force = false) {\n    this.move(Direction.NEXT, force);\n  }\n  /**\n   * Rolling to next slide\n   * @param {?=} force\n   * @return {?}\n   */\n  nextSlide(force = false) {\n    if (this.isPlaying) {\n      this.restartTimer();\n    }\n    this.move(Direction.NEXT, force);\n  }\n  /**\n   * Rolling to previous slide\n   * @param {?=} force\n   * @return {?}\n   */\n  previousSlide(force = false) {\n    if (this.isPlaying) {\n      this.restartTimer();\n    }\n    this.move(Direction.PREV, force);\n  }\n  /**\n   * @return {?}\n   */\n  getFirstVisibleIndex() {\n    return this.slides.findIndex(this.getActive);\n  }\n  /**\n   * @return {?}\n   */\n  getLastVisibleIndex() {\n    return findLastIndex(this.slides, this.getActive);\n  }\n  /**\n   * @param {?} direction\n   * @param {?=} force\n   * @return {?}\n   */\n  move(direction, force = false) {\n    /** @type {?} */\n    const firstVisibleIndex = this.getFirstVisibleIndex();\n    /** @type {?} */\n    const lastVisibleIndex = this.getLastVisibleIndex();\n    if (this.noWrap) {\n      if (direction === Direction.NEXT && this.isLast(lastVisibleIndex) || direction === Direction.PREV && firstVisibleIndex === 0) {\n        return;\n      }\n    }\n    if (!this.multilist) {\n      this.activeSlide = this.findNextSlideIndex(direction, force);\n    } else {\n      this.moveMultilist(direction);\n    }\n  }\n  /**\n   * Swith slides by enter, space and arrows keys\n   * \\@internal\n   * @param {?} event\n   * @return {?}\n   */\n  keydownPress(event) {\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      this.nextSlide();\n      event.preventDefault();\n      return;\n    }\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      this.previousSlide();\n      return;\n    }\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      this.nextSlide();\n      return;\n    }\n  }\n  /**\n   * Play on mouse leave\n   * \\@internal\n   * @return {?}\n   */\n  onMouseLeave() {\n    if (!this.pauseOnFocus) {\n      this.play();\n    }\n  }\n  /**\n   * Play on mouse up\n   * \\@internal\n   * @return {?}\n   */\n  onMouseUp() {\n    if (!this.pauseOnFocus) {\n      this.play();\n    }\n  }\n  /**\n   * When slides on focus autoplay is stopped(optional)\n   * \\@internal\n   * @return {?}\n   */\n  pauseFocusIn() {\n    if (this.pauseOnFocus) {\n      this.isPlaying = false;\n      this.resetTimer();\n    }\n  }\n  /**\n   * When slides out of focus autoplay is started\n   * \\@internal\n   * @return {?}\n   */\n  pauseFocusOut() {\n    this.play();\n  }\n  /**\n   * Rolling to specified slide\n   * @param {?} index\n   * @return {?}\n   */\n  selectSlide(index) {\n    if (this.isPlaying) {\n      this.restartTimer();\n    }\n    if (!this.multilist) {\n      this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\n    } else {\n      this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\n    }\n  }\n  /**\n   * Starts a auto changing of slides\n   * @return {?}\n   */\n  play() {\n    if (!this.isPlaying) {\n      this.isPlaying = true;\n      this.restartTimer();\n    }\n  }\n  /**\n   * Stops a auto changing of slides\n   * @return {?}\n   */\n  pause() {\n    if (!this.noPause) {\n      this.isPlaying = false;\n      this.resetTimer();\n    }\n  }\n  /**\n   * Finds and returns index of currently displayed slide\n   * @return {?}\n   */\n  getCurrentSlideIndex() {\n    return this._slides.findIndex(this.getActive);\n  }\n  /**\n   * Defines, whether the specified index is last in collection\n   * @param {?} index\n   * @return {?}\n   */\n  isLast(index) {\n    return index + 1 >= this._slides.length;\n  }\n  /**\n   * Defines, whether the specified index is first in collection\n   * @param {?} index\n   * @return {?}\n   */\n  isFirst(index) {\n    return index === 0;\n  }\n  /**\n   * @return {?}\n   */\n  indicatorsSlides() {\n    return this.slides.filter(\n    /**\n    * @param {?} slide\n    * @param {?} index\n    * @return {?}\n    */\n    (slide, index) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0);\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  selectInitialSlides() {\n    /** @type {?} */\n    const startIndex = this.startFromIndex <= this._slides.length ? this.startFromIndex : 0;\n    this.hideSlides();\n    if (this.singleSlideOffset) {\n      this._slidesWithIndexes = this.mapSlidesAndIndexes();\n      if (this._slides.length - startIndex < this.itemsPerSlide) {\n        /** @type {?} */\n        const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\n        this._slidesWithIndexes = [...this._slidesWithIndexes, ...slidesToAppend].slice(slidesToAppend.length).slice(0, this.itemsPerSlide);\n      } else {\n        this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);\n      }\n      this._slidesWithIndexes.forEach(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.item.active = true);\n      this.makeSlidesConsistent(this._slidesWithIndexes);\n    } else {\n      this.selectRangeByNestedIndex(startIndex);\n    }\n    this.slideRangeChange.emit(this.getVisibleIndexes());\n  }\n  /**\n   * Defines next slide index, depending of direction\n   * @private\n   * @param {?} direction\n   * @param {?} force\n   * @return {?}\n   */\n  findNextSlideIndex(direction, force) {\n    /** @type {?} */\n    let nextSlideIndex = 0;\n    if (!force && this.isLast(this.activeSlide) && direction !== Direction.PREV && this.noWrap) {\n      return undefined;\n    }\n    switch (direction) {\n      case Direction.NEXT:\n        // if this is last slide, not force, looping is disabled\n        // and need to going forward - select current slide, as a next\n        nextSlideIndex = !this.isLast(this._currentActiveSlide) ? this._currentActiveSlide + 1 : !force && this.noWrap ? this._currentActiveSlide : 0;\n        break;\n      case Direction.PREV:\n        // if this is first slide, not force, looping is disabled\n        // and need to going backward - select current slide, as a next\n        nextSlideIndex = this._currentActiveSlide > 0 ? this._currentActiveSlide - 1 : !force && this.noWrap ? this._currentActiveSlide : this._slides.length - 1;\n        break;\n      default:\n        throw new Error('Unknown direction');\n    }\n    return nextSlideIndex;\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  mapSlidesAndIndexes() {\n    return this.slides.slice().map(\n    /**\n    * @param {?} slide\n    * @param {?} index\n    * @return {?}\n    */\n    (slide, index) => {\n      return {\n        index,\n        item: slide\n      };\n    });\n  }\n  /**\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n  selectSlideRange(index) {\n    if (this.isIndexInRange(index)) {\n      return;\n    }\n    this.hideSlides();\n    if (!this.singleSlideOffset) {\n      this.selectRangeByNestedIndex(index);\n    } else {\n      /** @type {?} */\n      const startIndex = this.isIndexOnTheEdges(index) ? index : index - this.itemsPerSlide + 1;\n      /** @type {?} */\n      const endIndex = this.isIndexOnTheEdges(index) ? index + this.itemsPerSlide : index + 1;\n      this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\n      this.makeSlidesConsistent(this._slidesWithIndexes);\n      this._slidesWithIndexes.forEach(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.item.active = true);\n    }\n    this.slideRangeChange.emit(this.getVisibleIndexes());\n  }\n  /**\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n  selectRangeByNestedIndex(index) {\n    /** @type {?} */\n    const selectedRange = this._chunkedSlides.map(\n    /**\n    * @param {?} slidesList\n    * @param {?} i\n    * @return {?}\n    */\n    (slidesList, i) => {\n      return {\n        index: i,\n        list: slidesList\n      };\n    }).find(\n    /**\n    * @param {?} slidesList\n    * @return {?}\n    */\n    slidesList => {\n      return slidesList.list.find(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.index === index) !== undefined;\n    });\n    this._currentVisibleSlidesIndex = selectedRange.index;\n    this._chunkedSlides[selectedRange.index].forEach(\n    /**\n    * @param {?} slide\n    * @return {?}\n    */\n    slide => {\n      slide.item.active = true;\n    });\n  }\n  /**\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n  isIndexOnTheEdges(index) {\n    return index + 1 - this.itemsPerSlide <= 0 || index + this.itemsPerSlide <= this._slides.length;\n  }\n  /**\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n  isIndexInRange(index) {\n    if (this.singleSlideOffset) {\n      /** @type {?} */\n      const visibleIndexes = this._slidesWithIndexes.map(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.index);\n      return visibleIndexes.indexOf(index) >= 0;\n    }\n    return index <= this.getLastVisibleIndex() && index >= this.getFirstVisibleIndex();\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  hideSlides() {\n    this.slides.forEach(\n    /**\n    * @param {?} slide\n    * @return {?}\n    */\n    slide => slide.active = false);\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  isVisibleSlideListLast() {\n    return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  isVisibleSlideListFirst() {\n    return this._currentVisibleSlidesIndex === 0;\n  }\n  /**\n   * @private\n   * @param {?} direction\n   * @return {?}\n   */\n  moveSliderByOneItem(direction) {\n    /** @type {?} */\n    let firstVisibleIndex;\n    /** @type {?} */\n    let lastVisibleIndex;\n    /** @type {?} */\n    let indexToHide;\n    /** @type {?} */\n    let indexToShow;\n    if (this.noWrap) {\n      firstVisibleIndex = this.getFirstVisibleIndex();\n      lastVisibleIndex = this.getLastVisibleIndex();\n      indexToHide = direction === Direction.NEXT ? firstVisibleIndex : lastVisibleIndex;\n      indexToShow = direction !== Direction.NEXT ? firstVisibleIndex - 1 : !this.isLast(lastVisibleIndex) ? lastVisibleIndex + 1 : 0;\n      this._slides.get(indexToHide).active = false;\n      this._slides.get(indexToShow).active = true;\n      /** @type {?} */\n      const slidesToReorder = this.mapSlidesAndIndexes().filter(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.item.active);\n      this.makeSlidesConsistent(slidesToReorder);\n      this.slideRangeChange.emit(this.getVisibleIndexes());\n    } else {\n      /** @type {?} */\n      let displayedIndex;\n      firstVisibleIndex = this._slidesWithIndexes[0].index;\n      lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\n      if (direction === Direction.NEXT) {\n        this._slidesWithIndexes.shift();\n        displayedIndex = this.isLast(lastVisibleIndex) ? 0 : lastVisibleIndex + 1;\n        this._slidesWithIndexes.push({\n          index: displayedIndex,\n          item: this._slides.get(displayedIndex)\n        });\n      } else {\n        this._slidesWithIndexes.pop();\n        displayedIndex = this.isFirst(firstVisibleIndex) ? this._slides.length - 1 : firstVisibleIndex - 1;\n        this._slidesWithIndexes = [{\n          index: displayedIndex,\n          item: this._slides.get(displayedIndex)\n        }, ...this._slidesWithIndexes];\n      }\n      this.hideSlides();\n      this._slidesWithIndexes.forEach(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.item.active = true);\n      this.makeSlidesConsistent(this._slidesWithIndexes);\n      this.slideRangeChange.emit(this._slidesWithIndexes.map(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.index));\n    }\n  }\n  /**\n   * @private\n   * @param {?} direction\n   * @return {?}\n   */\n  moveMultilist(direction) {\n    if (this.singleSlideOffset) {\n      this.moveSliderByOneItem(direction);\n    } else {\n      this.hideSlides();\n      if (this.noWrap) {\n        this._currentVisibleSlidesIndex = direction === Direction.NEXT ? this._currentVisibleSlidesIndex + 1 : this._currentVisibleSlidesIndex - 1;\n      } else {\n        if (direction === Direction.NEXT) {\n          this._currentVisibleSlidesIndex = this.isVisibleSlideListLast() ? 0 : this._currentVisibleSlidesIndex + 1;\n        } else {\n          this._currentVisibleSlidesIndex = this.isVisibleSlideListFirst() ? this._chunkedSlides.length - 1 : this._currentVisibleSlidesIndex - 1;\n        }\n      }\n      this._chunkedSlides[this._currentVisibleSlidesIndex].forEach(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.item.active = true);\n      this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  getVisibleIndexes() {\n    if (!this.singleSlideOffset) {\n      return this._chunkedSlides[this._currentVisibleSlidesIndex].map(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.index);\n    } else {\n      return this._slidesWithIndexes.map(\n      /**\n      * @param {?} slide\n      * @return {?}\n      */\n      slide => slide.index);\n    }\n  }\n  /**\n   * Sets a slide, which specified through index, as active\n   * @private\n   * @param {?} index\n   * @return {?}\n   */\n  _select(index) {\n    if (isNaN(index)) {\n      this.pause();\n      return;\n    }\n    if (!this.multilist) {\n      /** @type {?} */\n      const currentSlide = this._slides.get(this._currentActiveSlide);\n      if (currentSlide) {\n        currentSlide.active = false;\n      }\n    }\n    /** @type {?} */\n    const nextSlide = this._slides.get(index);\n    if (nextSlide) {\n      this._currentActiveSlide = index;\n      nextSlide.active = true;\n      this.activeSlide = index;\n      this.activeSlideChange.emit(index);\n    }\n  }\n  /**\n   * Starts loop of auto changing of slides\n   * @private\n   * @return {?}\n   */\n  restartTimer() {\n    this.resetTimer();\n    /** @type {?} */\n    const interval = +this.interval;\n    if (!isNaN(interval) && interval > 0) {\n      this.currentInterval = this.ngZone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => {\n        return setInterval(\n        /**\n        * @return {?}\n        */\n        () => {\n          /** @type {?} */\n          const nInterval = +this.interval;\n          this.ngZone.run(\n          /**\n          * @return {?}\n          */\n          () => {\n            if (this.isPlaying && !isNaN(this.interval) && nInterval > 0 && this.slides.length) {\n              this.nextSlideFromInterval();\n            } else {\n              this.pause();\n            }\n          });\n        }, interval);\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  get multilist() {\n    return this.itemsPerSlide > 1;\n  }\n  /**\n   * Stops loop of auto changing of slides\n   * @private\n   * @return {?}\n   */\n  resetTimer() {\n    if (this.currentInterval) {\n      clearInterval(this.currentInterval);\n      this.currentInterval = void 0;\n    }\n  }\n}\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) {\n  return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nCarouselComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CarouselComponent,\n  selectors: [[\"carousel\"]],\n  inputs: {\n    indicatorsByChunk: \"indicatorsByChunk\",\n    itemsPerSlide: \"itemsPerSlide\",\n    singleSlideOffset: \"singleSlideOffset\",\n    isAnimated: \"isAnimated\",\n    startFromIndex: \"startFromIndex\",\n    activeSlide: \"activeSlide\",\n    interval: \"interval\",\n    noWrap: \"noWrap\",\n    noPause: \"noPause\",\n    showIndicators: \"showIndicators\",\n    pauseOnFocus: \"pauseOnFocus\"\n  },\n  outputs: {\n    activeSlideChange: \"activeSlideChange\",\n    slideRangeChange: \"slideRangeChange\"\n  },\n  ngContentSelectors: _c1,\n  decls: 6,\n  vars: 6,\n  consts: [[\"tabindex\", \"0\", 1, \"carousel\", \"slide\", 3, \"mouseenter\", \"mouseleave\", \"mouseup\", \"keydown\", \"focusin\", \"focusout\"], [\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\", 3, \"ngStyle\"], [\"class\", \"left carousel-control carousel-control-prev\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"right carousel-control carousel-control-next\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"left\", \"carousel-control\", \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-prev\", \"carousel-control-prev-icon\"], [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"right\", \"carousel-control\", \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-next\", \"carousel-control-next-icon\"]],\n  template: function CarouselComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"mouseenter\", function CarouselComponent_Template_div_mouseenter_0_listener() {\n        return ctx.pause();\n      })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onMouseLeave();\n      })(\"mouseup\", function CarouselComponent_Template_div_mouseup_0_listener() {\n        return ctx.onMouseUp();\n      })(\"keydown\", function CarouselComponent_Template_div_keydown_0_listener($event) {\n        return ctx.keydownPress($event);\n      })(\"focusin\", function CarouselComponent_Template_div_focusin_0_listener() {\n        return ctx.pauseFocusIn();\n      })(\"focusout\", function CarouselComponent_Template_div_focusout_0_listener() {\n        return ctx.pauseFocusOut();\n      });\n      ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_Template, 2, 1, \"ol\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, CarouselComponent_a_4_Template, 3, 3, \"a\", 3);\n      ɵngcc0.ɵɵtemplate(5, CarouselComponent_a_5_Template, 4, 2, \"a\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showIndicators && ctx.slides.length > 1);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx.multilist ? \"flex\" : \"block\"));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n    }\n  },\n  dependencies: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle],\n  encapsulation: 2\n});\n/** @nocollapse */\nCarouselComponent.ctorParameters = () => [{\n  type: CarouselConfig\n}, {\n  type: NgZone\n}];\nCarouselComponent.propDecorators = {\n  noWrap: [{\n    type: Input\n  }],\n  noPause: [{\n    type: Input\n  }],\n  showIndicators: [{\n    type: Input\n  }],\n  pauseOnFocus: [{\n    type: Input\n  }],\n  indicatorsByChunk: [{\n    type: Input\n  }],\n  itemsPerSlide: [{\n    type: Input\n  }],\n  singleSlideOffset: [{\n    type: Input\n  }],\n  isAnimated: [{\n    type: Input\n  }],\n  activeSlideChange: [{\n    type: Output\n  }],\n  slideRangeChange: [{\n    type: Output\n  }],\n  activeSlide: [{\n    type: Input\n  }],\n  startFromIndex: [{\n    type: Input\n  }],\n  interval: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{\n    type: Component,\n    args: [{\n      selector: 'carousel',\n      template: \"<div (mouseenter)=\\\"pause()\\\"\\n     (mouseleave)=\\\"onMouseLeave()\\\"\\n     (mouseup)=\\\"onMouseUp()\\\"\\n     (keydown)=\\\"keydownPress($event)\\\"\\n     (focusin)=\\\"pauseFocusIn()\\\"\\n     (focusout)=\\\"pauseFocusOut()\\\"\\n     class=\\\"carousel slide\\\" tabindex=\\\"0\\\">\\n  <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\">\\n    <li *ngFor=\\\"let slide of indicatorsSlides(); let i = index;\\\"\\n        [class.active]=\\\"slide.active === true\\\"\\n        (click)=\\\"selectSlide(i)\\\">\\n    </li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\" [ngStyle]=\\\"{'display': multilist ? 'flex' : 'block'}\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <a class=\\\"left carousel-control carousel-control-prev\\\"\\n     [class.disabled]=\\\"activeSlide === 0 && noWrap\\\"\\n     (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n      tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"right carousel-control carousel-control-next\\\"\\n     [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\"\\n     (click)=\\\"nextSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n     tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: CarouselConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    indicatorsByChunk: [{\n      type: Input\n    }],\n    itemsPerSlide: [{\n      type: Input\n    }],\n    singleSlideOffset: [{\n      type: Input\n    }],\n    isAnimated: [{\n      type: Input\n    }],\n    activeSlideChange: [{\n      type: Output\n    }],\n    slideRangeChange: [{\n      type: Output\n    }],\n    startFromIndex: [{\n      type: Input\n    }],\n    activeSlide: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    noWrap: [{\n      type: Input\n    }],\n    noPause: [{\n      type: Input\n    }],\n    showIndicators: [{\n      type: Input\n    }],\n    pauseOnFocus: [{\n      type: Input\n    }]\n  });\n})();\nif (false) {\n  /** @type {?} */\n  CarouselComponent.prototype.noWrap;\n  /** @type {?} */\n  CarouselComponent.prototype.noPause;\n  /** @type {?} */\n  CarouselComponent.prototype.showIndicators;\n  /** @type {?} */\n  CarouselComponent.prototype.pauseOnFocus;\n  /** @type {?} */\n  CarouselComponent.prototype.indicatorsByChunk;\n  /** @type {?} */\n  CarouselComponent.prototype.itemsPerSlide;\n  /** @type {?} */\n  CarouselComponent.prototype.singleSlideOffset;\n  /**\n   * Turn on/off animation. Animation doesn't work for multilist carousel\n   * @type {?}\n   */\n  CarouselComponent.prototype.isAnimated;\n  /**\n   * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n   * @type {?}\n   */\n  CarouselComponent.prototype.activeSlideChange;\n  /**\n   * Will be emitted when active slides has been changed in multilist mode\n   * @type {?}\n   */\n  CarouselComponent.prototype.slideRangeChange;\n  /** @type {?} */\n  CarouselComponent.prototype.startFromIndex;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype.currentInterval;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype._currentActiveSlide;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype._interval;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype._slides;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype._chunkedSlides;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype._slidesWithIndexes;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype._currentVisibleSlidesIndex;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype.isPlaying;\n  /**\n   * @type {?}\n   * @protected\n   */\n  CarouselComponent.prototype.destroyed;\n  /** @type {?} */\n  CarouselComponent.prototype.getActive;\n  /**\n   * @type {?}\n   * @private\n   */\n  CarouselComponent.prototype.makeSlidesConsistent;\n  /**\n   * @type {?}\n   * @private\n   */\n  CarouselComponent.prototype.ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SlideComponent {\n  /**\n   * @param {?} carousel\n   */\n  constructor(carousel) {\n    this.itemWidth = '100%';\n    this.order = 0;\n    /**\n     * Wraps element by appropriate CSS classes\n     */\n    this.addClass = true;\n    this.carousel = carousel;\n  }\n  /**\n   * Fires changes in container collection after adding a new slide instance\n   * @return {?}\n   */\n  ngOnInit() {\n    this.carousel.addSlide(this);\n    this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;\n  }\n  /**\n   * Fires changes in container collection after removing of this slide instance\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this.carousel.removeSlide(this);\n  }\n}\nSlideComponent.ɵfac = function SlideComponent_Factory(t) {\n  return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselComponent));\n};\nSlideComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: SlideComponent,\n  selectors: [[\"slide\"]],\n  hostVars: 13,\n  hostBindings: function SlideComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-hidden\", !ctx.active);\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.itemWidth)(\"order\", ctx.order);\n      ɵngcc0.ɵɵclassProp(\"item\", ctx.addClass)(\"carousel-item\", ctx.addClass)(\"active\", ctx.active)(\"carousel-animation\", ctx.isAnimated);\n    }\n  },\n  inputs: {\n    active: \"active\"\n  },\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"item\"]],\n  template: function SlideComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"active\", ctx.active);\n    }\n  },\n  styles: [\".carousel-animation[_nghost-%COMP%] {\\n       transition: opacity 0.6s ease, visibility 0.6s ease;\\n       float: left;\\n    }\\n    .carousel-animation.active[_nghost-%COMP%] {\\n      opacity: 1;\\n      visibility: visible;\\n    }\\n    .carousel-animation[_nghost-%COMP%]:not(.active) {\\n      display: block;\\n      position: absolute;\\n      opacity: 0;\\n      visibility: hidden;\\n    }\"]\n});\n/** @nocollapse */\nSlideComponent.ctorParameters = () => [{\n  type: CarouselComponent\n}];\nSlideComponent.propDecorators = {\n  active: [{\n    type: HostBinding,\n    args: ['class.active']\n  }, {\n    type: Input\n  }],\n  itemWidth: [{\n    type: HostBinding,\n    args: ['style.width']\n  }],\n  order: [{\n    type: HostBinding,\n    args: ['style.order']\n  }],\n  isAnimated: [{\n    type: HostBinding,\n    args: ['class.carousel-animation']\n  }],\n  addClass: [{\n    type: HostBinding,\n    args: ['class.item']\n  }, {\n    type: HostBinding,\n    args: ['class.carousel-item']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SlideComponent, [{\n    type: Component,\n    args: [{\n      selector: 'slide',\n      template: `\n    <div [class.active]=\"active\" class=\"item\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        '[attr.aria-hidden]': '!active'\n      },\n      styles: [\"\\n    :host.carousel-animation {\\n       transition: opacity 0.6s ease, visibility 0.6s ease;\\n       float: left;\\n    }\\n    :host.carousel-animation.active {\\n      opacity: 1;\\n      visibility: visible;\\n    }\\n    :host.carousel-animation:not(.active) {\\n      display: block;\\n      position: absolute;\\n      opacity: 0;\\n      visibility: hidden;\\n    }\\n  \"]\n    }]\n  }], function () {\n    return [{\n      type: CarouselComponent\n    }];\n  }, {\n    itemWidth: [{\n      type: HostBinding,\n      args: ['style.width']\n    }],\n    order: [{\n      type: HostBinding,\n      args: ['style.order']\n    }],\n    addClass: [{\n      type: HostBinding,\n      args: ['class.item']\n    }, {\n      type: HostBinding,\n      args: ['class.carousel-item']\n    }],\n    active: [{\n      type: HostBinding,\n      args: ['class.active']\n    }, {\n      type: Input\n    }],\n    isAnimated: [{\n      type: HostBinding,\n      args: ['class.carousel-animation']\n    }]\n  });\n})();\nif (false) {\n  /**\n   * Is current slide active\n   * @type {?}\n   */\n  SlideComponent.prototype.active;\n  /** @type {?} */\n  SlideComponent.prototype.itemWidth;\n  /** @type {?} */\n  SlideComponent.prototype.order;\n  /** @type {?} */\n  SlideComponent.prototype.isAnimated;\n  /**\n   * Wraps element by appropriate CSS classes\n   * @type {?}\n   */\n  SlideComponent.prototype.addClass;\n  /**\n   * Link to Parent(container-collection) component\n   * @type {?}\n   * @protected\n   */\n  SlideComponent.prototype.carousel;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CarouselModule {\n  /**\n   * @return {?}\n   */\n  static forRoot() {\n    return {\n      ngModule: CarouselModule,\n      providers: []\n    };\n  }\n}\nCarouselModule.ɵfac = function CarouselModule_Factory(t) {\n  return new (t || CarouselModule)();\n};\nCarouselModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CarouselModule\n});\nCarouselModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SlideComponent, CarouselComponent],\n      exports: [SlideComponent, CarouselComponent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, {\n    declarations: function () {\n      return [SlideComponent, CarouselComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [SlideComponent, CarouselComponent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CarouselComponent, CarouselConfig, CarouselModule, SlideComponent };","map":{"version":3,"names":["Injectable","ɵɵdefineInjectable","EventEmitter","Component","NgZone","Input","Output","HostBinding","NgModule","LinkedList","isBs3","CommonModule","ɵngcc0","ɵngcc1","CarouselComponent_ol_1_li_1_Template","rf","ctx","_r7","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","CarouselComponent_ol_1_li_1_Template_li_click_0_listener","restoredCtx","ɵɵrestoreView","i_r5","index","ctx_r6","ɵɵnextContext","ɵɵresetView","selectSlide","ɵɵelementEnd","slide_r4","$implicit","ɵɵclassProp","active","CarouselComponent_ol_1_Template","ɵɵtemplate","ctx_r0","ɵɵadvance","ɵɵproperty","indicatorsSlides","CarouselComponent_a_4_span_2_Template","ɵɵtext","CarouselComponent_a_4_Template","_r10","CarouselComponent_a_4_Template_a_click_0_listener","ctx_r9","previousSlide","ɵɵelement","ctx_r1","activeSlide","noWrap","isBs4","CarouselComponent_a_5_Template","_r12","CarouselComponent_a_5_Template_a_click_0_listener","ctx_r11","nextSlide","ctx_r2","isLast","_c0","a0","_c1","CarouselConfig","constructor","interval","noPause","showIndicators","pauseOnFocus","indicatorsByChunk","itemsPerSlide","singleSlideOffset","ɵfac","CarouselConfig_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args","prototype","findLastIndex","array","predicate","l","length","chunkByNumber","size","out","n","Math","ceil","i","chunk","splice","push","Direction","UNKNOWN","NEXT","PREV","CarouselComponent","config","ngZone","isAnimated","activeSlideChange","slideRangeChange","startFromIndex","_slides","_currentVisibleSlidesIndex","destroyed","getActive","slide","makeSlidesConsistent","slides","forEach","item","order","Object","assign","multilist","_currentActiveSlide","_select","_interval","value","restartTimer","toArray","ngAfterViewInit","setTimeout","_chunkedSlides","mapSlidesAndIndexes","selectInitialSlides","ngOnDestroy","addSlide","add","undefined","play","removeSlide","remIndex","indexOf","nextSlideIndex","remove","currentSlideIndex","getCurrentSlideIndex","emit","nextSlideFromInterval","force","move","isPlaying","getFirstVisibleIndex","findIndex","getLastVisibleIndex","direction","firstVisibleIndex","lastVisibleIndex","findNextSlideIndex","moveMultilist","keydownPress","event","keyCode","key","preventDefault","onMouseLeave","onMouseUp","pauseFocusIn","resetTimer","pauseFocusOut","selectSlideRange","pause","isFirst","filter","startIndex","hideSlides","_slidesWithIndexes","slidesToAppend","slice","selectRangeByNestedIndex","getVisibleIndexes","Error","map","isIndexInRange","isIndexOnTheEdges","endIndex","selectedRange","slidesList","list","find","visibleIndexes","isVisibleSlideListLast","isVisibleSlideListFirst","moveSliderByOneItem","indexToHide","indexToShow","get","slidesToReorder","displayedIndex","shift","pop","isNaN","currentSlide","currentInterval","runOutsideAngular","setInterval","nInterval","run","clearInterval","CarouselComponent_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","ngContentSelectors","decls","vars","consts","template","CarouselComponent_Template","ɵɵprojectionDef","CarouselComponent_Template_div_mouseenter_0_listener","CarouselComponent_Template_div_mouseleave_0_listener","CarouselComponent_Template_div_mouseup_0_listener","CarouselComponent_Template_div_keydown_0_listener","$event","CarouselComponent_Template_div_focusin_0_listener","CarouselComponent_Template_div_focusout_0_listener","ɵɵprojection","ɵɵpureFunction1","dependencies","NgForOf","NgIf","NgStyle","encapsulation","ctorParameters","propDecorators","selector","SlideComponent","carousel","itemWidth","addClass","ngOnInit","SlideComponent_Factory","hostVars","hostBindings","SlideComponent_HostBindings","ɵɵattribute","ɵɵstyleProp","SlideComponent_Template","styles","host","CarouselModule","forRoot","ngModule","providers","CarouselModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/luan.santos/Desktop/Projetos e anotações/NerdStoreDistribuida/src/web/WebSPA/node_modules/ngx-bootstrap/__ivy_ngcc__/carousel/fesm2015/ngx-bootstrap-carousel.js"],"sourcesContent":["import { Injectable, ɵɵdefineInjectable, EventEmitter, Component, NgZone, Input, Output, HostBinding, NgModule } from '@angular/core';\nimport { LinkedList, isBs3 } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction CarouselComponent_ol_1_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ol_1_li_1_Template_li_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const i_r5 = restoredCtx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r6.selectSlide(i_r5)); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r4.active === true);\n} }\nfunction CarouselComponent_ol_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_li_1_Template, 1, 2, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.indicatorsSlides());\n} }\nfunction CarouselComponent_a_4_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 11);\n    ɵngcc0.ɵɵtext(1, \"Previous\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction CarouselComponent_a_4_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_4_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r9.previousSlide()); });\n    ɵngcc0.ɵɵelement(1, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(2, CarouselComponent_a_4_span_2_Template, 2, 0, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r1.activeSlide === 0 && ctx_r1.noWrap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isBs4);\n} }\nfunction CarouselComponent_a_5_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_5_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r11.nextSlide()); });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 11);\n    ɵngcc0.ɵɵtext(3, \"Next\");\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r2.isLast(ctx_r2.activeSlide) && ctx_r2.noWrap);\n} }\nconst _c0 = function (a0) { return { \"display\": a0 }; };\nconst _c1 = [\"*\"];\nclass CarouselConfig {\n    constructor() {\n        /* Default interval of auto changing of slides */\n        this.interval = 5000;\n        /* Is loop of auto changing of slides can be paused */\n        this.noPause = false;\n        /* Is slides can wrap from the last to the first slide */\n        this.noWrap = false;\n        /* Show carousel-indicators */\n        this.showIndicators = true;\n        /* Slides can be paused on focus */\n        this.pauseOnFocus = false;\n        /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n            of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n    }\n}\nCarouselConfig.ɵfac = function CarouselConfig_Factory(t) { return new (t || CarouselConfig)(); };\n/** @nocollapse */ CarouselConfig.ɵprov = ɵɵdefineInjectable({ factory: function CarouselConfig_Factory() { return new CarouselConfig(); }, token: CarouselConfig, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselConfig, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    CarouselConfig.prototype.interval;\n    /** @type {?} */\n    CarouselConfig.prototype.noPause;\n    /** @type {?} */\n    CarouselConfig.prototype.noWrap;\n    /** @type {?} */\n    CarouselConfig.prototype.showIndicators;\n    /** @type {?} */\n    CarouselConfig.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselConfig.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselConfig.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselConfig.prototype.singleSlideOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the index of the last element in the array where predicate is true, and -1\n * otherwise.\n * @template T\n * @param {?} array The source array to search in\n * @param {?} predicate find calls predicate once for each element of the array, in descending\n * order, until it finds one where predicate returns true. If such an element is found,\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n * @return {?}\n */\nfunction findLastIndex(array, predicate) {\n    /** @type {?} */\n    let l = array.length;\n    while (l--) {\n        if (predicate(array[l], l, array)) {\n            return l;\n        }\n    }\n    return -1;\n}\n/**\n * @template T\n * @param {?} array\n * @param {?} size\n * @return {?}\n */\nfunction chunkByNumber(array, size) {\n    /** @type {?} */\n    const out = [];\n    /** @type {?} */\n    const n = Math.ceil((array.length) / size);\n    /** @type {?} */\n    let i = 0;\n    while (i < n) {\n        /** @type {?} */\n        const chunk = array.splice(0, (i === n - 1) && size < array.length ? array.length : size);\n        out.push(chunk);\n        i++;\n    }\n    return out;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Direction = {\n    UNKNOWN: 0,\n    NEXT: 1,\n    PREV: 2,\n};\nDirection[Direction.UNKNOWN] = 'UNKNOWN';\nDirection[Direction.NEXT] = 'NEXT';\nDirection[Direction.PREV] = 'PREV';\n/**\n * Base element to create carousel\n */\nclass CarouselComponent {\n    /**\n     * @param {?} config\n     * @param {?} ngZone\n     */\n    constructor(config, ngZone) {\n        this.ngZone = ngZone;\n        /* If `true` - carousel indicators indicate slides chunks\n             works ONLY if singleSlideOffset = FALSE */\n        this.indicatorsByChunk = false;\n        /* If value more then 1 — carousel works in multilist mode */\n        this.itemsPerSlide = 1;\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\n             of visible elements (itemsPerSlide field) */\n        this.singleSlideOffset = false;\n        /**\n         * Turn on/off animation. Animation doesn't work for multilist carousel\n         */\n        this.isAnimated = false;\n        /**\n         * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n         */\n        this.activeSlideChange = new EventEmitter(false);\n        /**\n         * Will be emitted when active slides has been changed in multilist mode\n         */\n        this.slideRangeChange = new EventEmitter();\n        /* Index to start display slides from it */\n        this.startFromIndex = 0;\n        this._slides = new LinkedList();\n        this._currentVisibleSlidesIndex = 0;\n        this.destroyed = false;\n        this.getActive = (/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active);\n        this.makeSlidesConsistent = (/**\n         * @param {?} slides\n         * @return {?}\n         */\n        (slides) => {\n            slides.forEach((/**\n             * @param {?} slide\n             * @param {?} index\n             * @return {?}\n             */\n            (slide, index) => slide.item.order = index));\n        });\n        Object.assign(this, config);\n    }\n    /**\n     * Index of currently displayed slide(started for 0)\n     * @param {?} index\n     * @return {?}\n     */\n    set activeSlide(index) {\n        if (this.multilist) {\n            return;\n        }\n        if (this._slides.length && index !== this._currentActiveSlide) {\n            this._select(index);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get activeSlide() {\n        return this._currentActiveSlide;\n    }\n    /**\n     * Delay of item cycling in milliseconds. If false, carousel won't cycle\n     * automatically.\n     * @return {?}\n     */\n    get interval() {\n        return this._interval;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set interval(value) {\n        this._interval = value;\n        this.restartTimer();\n    }\n    /**\n     * @return {?}\n     */\n    get slides() {\n        return this._slides.toArray();\n    }\n    /**\n     * @return {?}\n     */\n    get isBs4() {\n        return !isBs3();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this.singleSlideOffset) {\n                this.indicatorsByChunk = false;\n            }\n            if (this.multilist) {\n                this._chunkedSlides = chunkByNumber(this.mapSlidesAndIndexes(), this.itemsPerSlide);\n                this.selectInitialSlides();\n            }\n        }), 0);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed = true;\n    }\n    /**\n     * Adds new slide. If this slide is first in collection - set it as active\n     * and starts auto changing\n     * @param {?} slide\n     * @return {?}\n     */\n    addSlide(slide) {\n        this._slides.add(slide);\n        if (this.multilist && this._slides.length <= this.itemsPerSlide) {\n            slide.active = true;\n        }\n        if (!this.multilist && this.isAnimated) {\n            slide.isAnimated = true;\n        }\n        if (!this.multilist && this._slides.length === 1) {\n            this._currentActiveSlide = undefined;\n            this.activeSlide = 0;\n            this.play();\n        }\n        if (this.multilist && this._slides.length > this.itemsPerSlide) {\n            this.play();\n        }\n    }\n    /**\n     * Removes specified slide. If this slide is active - will roll to another\n     * slide\n     * @param {?} slide\n     * @return {?}\n     */\n    removeSlide(slide) {\n        /** @type {?} */\n        const remIndex = this._slides.indexOf(slide);\n        if (this._currentActiveSlide === remIndex) {\n            // removing of active slide\n            /** @type {?} */\n            let nextSlideIndex = void 0;\n            if (this._slides.length > 1) {\n                // if this slide last - will roll to first slide, if noWrap flag is\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n                // middle of collection, index of next slide is same to removed\n                nextSlideIndex = !this.isLast(remIndex)\n                    ? remIndex\n                    : this.noWrap ? remIndex - 1 : 0;\n            }\n            this._slides.remove(remIndex);\n            // prevents exception with changing some value after checking\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._select(nextSlideIndex);\n            }), 0);\n        }\n        else {\n            this._slides.remove(remIndex);\n            /** @type {?} */\n            const currentSlideIndex = this.getCurrentSlideIndex();\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // after removing, need to actualize index of current active slide\n                this._currentActiveSlide = currentSlideIndex;\n                this.activeSlideChange.emit(this._currentActiveSlide);\n            }), 0);\n        }\n    }\n    /**\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlideFromInterval(force = false) {\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to next slide\n     * @param {?=} force\n     * @return {?}\n     */\n    nextSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.NEXT, force);\n    }\n    /**\n     * Rolling to previous slide\n     * @param {?=} force\n     * @return {?}\n     */\n    previousSlide(force = false) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        this.move(Direction.PREV, force);\n    }\n    /**\n     * @return {?}\n     */\n    getFirstVisibleIndex() {\n        return this.slides.findIndex(this.getActive);\n    }\n    /**\n     * @return {?}\n     */\n    getLastVisibleIndex() {\n        return findLastIndex(this.slides, this.getActive);\n    }\n    /**\n     * @param {?} direction\n     * @param {?=} force\n     * @return {?}\n     */\n    move(direction, force = false) {\n        /** @type {?} */\n        const firstVisibleIndex = this.getFirstVisibleIndex();\n        /** @type {?} */\n        const lastVisibleIndex = this.getLastVisibleIndex();\n        if (this.noWrap) {\n            if (direction === Direction.NEXT &&\n                this.isLast(lastVisibleIndex) ||\n                direction === Direction.PREV &&\n                    firstVisibleIndex === 0) {\n                return;\n            }\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.findNextSlideIndex(direction, force);\n        }\n        else {\n            this.moveMultilist(direction);\n        }\n    }\n    /**\n     * Swith slides by enter, space and arrows keys\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n    keydownPress(event) {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            this.nextSlide();\n            event.preventDefault();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            this.previousSlide();\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            this.nextSlide();\n            return;\n        }\n    }\n    /**\n     * Play on mouse leave\n     * \\@internal\n     * @return {?}\n     */\n    onMouseLeave() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * Play on mouse up\n     * \\@internal\n     * @return {?}\n     */\n    onMouseUp() {\n        if (!this.pauseOnFocus) {\n            this.play();\n        }\n    }\n    /**\n     * When slides on focus autoplay is stopped(optional)\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusIn() {\n        if (this.pauseOnFocus) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * When slides out of focus autoplay is started\n     * \\@internal\n     * @return {?}\n     */\n    pauseFocusOut() {\n        this.play();\n    }\n    /**\n     * Rolling to specified slide\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlide(index) {\n        if (this.isPlaying) {\n            this.restartTimer();\n        }\n        if (!this.multilist) {\n            this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\n        }\n        else {\n            this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\n        }\n    }\n    /**\n     * Starts a auto changing of slides\n     * @return {?}\n     */\n    play() {\n        if (!this.isPlaying) {\n            this.isPlaying = true;\n            this.restartTimer();\n        }\n    }\n    /**\n     * Stops a auto changing of slides\n     * @return {?}\n     */\n    pause() {\n        if (!this.noPause) {\n            this.isPlaying = false;\n            this.resetTimer();\n        }\n    }\n    /**\n     * Finds and returns index of currently displayed slide\n     * @return {?}\n     */\n    getCurrentSlideIndex() {\n        return this._slides.findIndex(this.getActive);\n    }\n    /**\n     * Defines, whether the specified index is last in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isLast(index) {\n        return index + 1 >= this._slides.length;\n    }\n    /**\n     * Defines, whether the specified index is first in collection\n     * @param {?} index\n     * @return {?}\n     */\n    isFirst(index) {\n        return index === 0;\n    }\n    /**\n     * @return {?}\n     */\n    indicatorsSlides() {\n        return this.slides.filter((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    selectInitialSlides() {\n        /** @type {?} */\n        const startIndex = this.startFromIndex <= this._slides.length\n            ? this.startFromIndex\n            : 0;\n        this.hideSlides();\n        if (this.singleSlideOffset) {\n            this._slidesWithIndexes = this.mapSlidesAndIndexes();\n            if (this._slides.length - startIndex < this.itemsPerSlide) {\n                /** @type {?} */\n                const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\n                this._slidesWithIndexes = [\n                    ...this._slidesWithIndexes,\n                    ...slidesToAppend\n                ]\n                    .slice(slidesToAppend.length)\n                    .slice(0, this.itemsPerSlide);\n            }\n            else {\n                this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);\n            }\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n        }\n        else {\n            this.selectRangeByNestedIndex(startIndex);\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * Defines next slide index, depending of direction\n     * @private\n     * @param {?} direction\n     * @param {?} force\n     * @return {?}\n     */\n    findNextSlideIndex(direction, force) {\n        /** @type {?} */\n        let nextSlideIndex = 0;\n        if (!force &&\n            (this.isLast(this.activeSlide) &&\n                direction !== Direction.PREV &&\n                this.noWrap)) {\n            return undefined;\n        }\n        switch (direction) {\n            case Direction.NEXT:\n                // if this is last slide, not force, looping is disabled\n                // and need to going forward - select current slide, as a next\n                nextSlideIndex = !this.isLast(this._currentActiveSlide)\n                    ? this._currentActiveSlide + 1\n                    : !force && this.noWrap ? this._currentActiveSlide : 0;\n                break;\n            case Direction.PREV:\n                // if this is first slide, not force, looping is disabled\n                // and need to going backward - select current slide, as a next\n                nextSlideIndex =\n                    this._currentActiveSlide > 0\n                        ? this._currentActiveSlide - 1\n                        : !force && this.noWrap\n                            ? this._currentActiveSlide\n                            : this._slides.length - 1;\n                break;\n            default:\n                throw new Error('Unknown direction');\n        }\n        return nextSlideIndex;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    mapSlidesAndIndexes() {\n        return this.slides\n            .slice()\n            .map((/**\n         * @param {?} slide\n         * @param {?} index\n         * @return {?}\n         */\n        (slide, index) => {\n            return {\n                index,\n                item: slide\n            };\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectSlideRange(index) {\n        if (this.isIndexInRange(index)) {\n            return;\n        }\n        this.hideSlides();\n        if (!this.singleSlideOffset) {\n            this.selectRangeByNestedIndex(index);\n        }\n        else {\n            /** @type {?} */\n            const startIndex = this.isIndexOnTheEdges(index)\n                ? index\n                : index - this.itemsPerSlide + 1;\n            /** @type {?} */\n            const endIndex = this.isIndexOnTheEdges(index)\n                ? index + this.itemsPerSlide\n                : index + 1;\n            this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n        }\n        this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    selectRangeByNestedIndex(index) {\n        /** @type {?} */\n        const selectedRange = this._chunkedSlides\n            .map((/**\n         * @param {?} slidesList\n         * @param {?} i\n         * @return {?}\n         */\n        (slidesList, i) => {\n            return {\n                index: i,\n                list: slidesList\n            };\n        }))\n            .find((/**\n         * @param {?} slidesList\n         * @return {?}\n         */\n        (slidesList) => {\n            return slidesList.list.find((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.index === index)) !== undefined;\n        }));\n        this._currentVisibleSlidesIndex = selectedRange.index;\n        this._chunkedSlides[selectedRange.index].forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => {\n            slide.item.active = true;\n        }));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexOnTheEdges(index) {\n        return (index + 1 - this.itemsPerSlide <= 0 ||\n            index + this.itemsPerSlide <= this._slides.length);\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    isIndexInRange(index) {\n        if (this.singleSlideOffset) {\n            /** @type {?} */\n            const visibleIndexes = this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n            return visibleIndexes.indexOf(index) >= 0;\n        }\n        return (index <= this.getLastVisibleIndex() &&\n            index >= this.getFirstVisibleIndex());\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hideSlides() {\n        this.slides.forEach((/**\n         * @param {?} slide\n         * @return {?}\n         */\n        (slide) => slide.active = false));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListLast() {\n        return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isVisibleSlideListFirst() {\n        return this._currentVisibleSlidesIndex === 0;\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveSliderByOneItem(direction) {\n        /** @type {?} */\n        let firstVisibleIndex;\n        /** @type {?} */\n        let lastVisibleIndex;\n        /** @type {?} */\n        let indexToHide;\n        /** @type {?} */\n        let indexToShow;\n        if (this.noWrap) {\n            firstVisibleIndex = this.getFirstVisibleIndex();\n            lastVisibleIndex = this.getLastVisibleIndex();\n            indexToHide = direction === Direction.NEXT\n                ? firstVisibleIndex\n                : lastVisibleIndex;\n            indexToShow = direction !== Direction.NEXT\n                ? firstVisibleIndex - 1\n                : !this.isLast(lastVisibleIndex)\n                    ? lastVisibleIndex + 1 : 0;\n            this._slides.get(indexToHide).active = false;\n            this._slides.get(indexToShow).active = true;\n            /** @type {?} */\n            const slidesToReorder = this.mapSlidesAndIndexes().filter((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active));\n            this.makeSlidesConsistent(slidesToReorder);\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n        else {\n            /** @type {?} */\n            let displayedIndex;\n            firstVisibleIndex = this._slidesWithIndexes[0].index;\n            lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\n            if (direction === Direction.NEXT) {\n                this._slidesWithIndexes.shift();\n                displayedIndex = this.isLast(lastVisibleIndex)\n                    ? 0\n                    : lastVisibleIndex + 1;\n                this._slidesWithIndexes.push({\n                    index: displayedIndex,\n                    item: this._slides.get(displayedIndex)\n                });\n            }\n            else {\n                this._slidesWithIndexes.pop();\n                displayedIndex = this.isFirst(firstVisibleIndex)\n                    ? this._slides.length - 1\n                    : firstVisibleIndex - 1;\n                this._slidesWithIndexes = [{\n                        index: displayedIndex,\n                        item: this._slides.get(displayedIndex)\n                    }, ...this._slidesWithIndexes];\n            }\n            this.hideSlides();\n            this._slidesWithIndexes.forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            slide => slide.item.active = true));\n            this.makeSlidesConsistent(this._slidesWithIndexes);\n            this.slideRangeChange.emit(this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index)));\n        }\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n    moveMultilist(direction) {\n        if (this.singleSlideOffset) {\n            this.moveSliderByOneItem(direction);\n        }\n        else {\n            this.hideSlides();\n            if (this.noWrap) {\n                this._currentVisibleSlidesIndex = direction === Direction.NEXT\n                    ? this._currentVisibleSlidesIndex + 1\n                    : this._currentVisibleSlidesIndex - 1;\n            }\n            else {\n                if (direction === Direction.NEXT) {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListLast()\n                        ? 0\n                        : this._currentVisibleSlidesIndex + 1;\n                }\n                else {\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListFirst()\n                        ? this._chunkedSlides.length - 1\n                        : this._currentVisibleSlidesIndex - 1;\n                }\n            }\n            this._chunkedSlides[this._currentVisibleSlidesIndex].forEach((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.item.active = true));\n            this.slideRangeChange.emit(this.getVisibleIndexes());\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getVisibleIndexes() {\n        if (!this.singleSlideOffset) {\n            return this._chunkedSlides[this._currentVisibleSlidesIndex]\n                .map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n        else {\n            return this._slidesWithIndexes.map((/**\n             * @param {?} slide\n             * @return {?}\n             */\n            (slide) => slide.index));\n        }\n    }\n    /**\n     * Sets a slide, which specified through index, as active\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _select(index) {\n        if (isNaN(index)) {\n            this.pause();\n            return;\n        }\n        if (!this.multilist) {\n            /** @type {?} */\n            const currentSlide = this._slides.get(this._currentActiveSlide);\n            if (currentSlide) {\n                currentSlide.active = false;\n            }\n        }\n        /** @type {?} */\n        const nextSlide = this._slides.get(index);\n        if (nextSlide) {\n            this._currentActiveSlide = index;\n            nextSlide.active = true;\n            this.activeSlide = index;\n            this.activeSlideChange.emit(index);\n        }\n    }\n    /**\n     * Starts loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    restartTimer() {\n        this.resetTimer();\n        /** @type {?} */\n        const interval = +this.interval;\n        if (!isNaN(interval) && interval > 0) {\n            this.currentInterval = this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return setInterval((/**\n                 * @return {?}\n                 */\n                () => {\n                    /** @type {?} */\n                    const nInterval = +this.interval;\n                    this.ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => {\n                        if (this.isPlaying &&\n                            !isNaN(this.interval) &&\n                            nInterval > 0 &&\n                            this.slides.length) {\n                            this.nextSlideFromInterval();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }));\n                }), interval);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get multilist() {\n        return this.itemsPerSlide > 1;\n    }\n    /**\n     * Stops loop of auto changing of slides\n     * @private\n     * @return {?}\n     */\n    resetTimer() {\n        if (this.currentInterval) {\n            clearInterval(this.currentInterval);\n            this.currentInterval = void 0;\n        }\n    }\n}\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) { return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCarouselComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CarouselComponent, selectors: [[\"carousel\"]], inputs: { indicatorsByChunk: \"indicatorsByChunk\", itemsPerSlide: \"itemsPerSlide\", singleSlideOffset: \"singleSlideOffset\", isAnimated: \"isAnimated\", startFromIndex: \"startFromIndex\", activeSlide: \"activeSlide\", interval: \"interval\", noWrap: \"noWrap\", noPause: \"noPause\", showIndicators: \"showIndicators\", pauseOnFocus: \"pauseOnFocus\" }, outputs: { activeSlideChange: \"activeSlideChange\", slideRangeChange: \"slideRangeChange\" }, ngContentSelectors: _c1, decls: 6, vars: 6, consts: [[\"tabindex\", \"0\", 1, \"carousel\", \"slide\", 3, \"mouseenter\", \"mouseleave\", \"mouseup\", \"keydown\", \"focusin\", \"focusout\"], [\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\", 3, \"ngStyle\"], [\"class\", \"left carousel-control carousel-control-prev\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"right carousel-control carousel-control-next\", \"tabindex\", \"0\", \"role\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"left\", \"carousel-control\", \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-prev\", \"carousel-control-prev-icon\"], [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"right\", \"carousel-control\", \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-next\", \"carousel-control-next-icon\"]], template: function CarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function CarouselComponent_Template_div_mouseenter_0_listener() { return ctx.pause(); })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() { return ctx.onMouseLeave(); })(\"mouseup\", function CarouselComponent_Template_div_mouseup_0_listener() { return ctx.onMouseUp(); })(\"keydown\", function CarouselComponent_Template_div_keydown_0_listener($event) { return ctx.keydownPress($event); })(\"focusin\", function CarouselComponent_Template_div_focusin_0_listener() { return ctx.pauseFocusIn(); })(\"focusout\", function CarouselComponent_Template_div_focusout_0_listener() { return ctx.pauseFocusOut(); });\n        ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_1_Template, 2, 1, \"ol\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, CarouselComponent_a_4_Template, 3, 3, \"a\", 3);\n        ɵngcc0.ɵɵtemplate(5, CarouselComponent_a_5_Template, 4, 2, \"a\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showIndicators && ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(4, _c0, ctx.multilist ? \"flex\" : \"block\"));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1);\n    } }, dependencies: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle], encapsulation: 2 });\n/** @nocollapse */\nCarouselComponent.ctorParameters = () => [\n    { type: CarouselConfig },\n    { type: NgZone }\n];\nCarouselComponent.propDecorators = {\n    noWrap: [{ type: Input }],\n    noPause: [{ type: Input }],\n    showIndicators: [{ type: Input }],\n    pauseOnFocus: [{ type: Input }],\n    indicatorsByChunk: [{ type: Input }],\n    itemsPerSlide: [{ type: Input }],\n    singleSlideOffset: [{ type: Input }],\n    isAnimated: [{ type: Input }],\n    activeSlideChange: [{ type: Output }],\n    slideRangeChange: [{ type: Output }],\n    activeSlide: [{ type: Input }],\n    startFromIndex: [{ type: Input }],\n    interval: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{\n        type: Component,\n        args: [{\n                selector: 'carousel',\n                template: \"<div (mouseenter)=\\\"pause()\\\"\\n     (mouseleave)=\\\"onMouseLeave()\\\"\\n     (mouseup)=\\\"onMouseUp()\\\"\\n     (keydown)=\\\"keydownPress($event)\\\"\\n     (focusin)=\\\"pauseFocusIn()\\\"\\n     (focusout)=\\\"pauseFocusOut()\\\"\\n     class=\\\"carousel slide\\\" tabindex=\\\"0\\\">\\n  <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\">\\n    <li *ngFor=\\\"let slide of indicatorsSlides(); let i = index;\\\"\\n        [class.active]=\\\"slide.active === true\\\"\\n        (click)=\\\"selectSlide(i)\\\">\\n    </li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\" [ngStyle]=\\\"{'display': multilist ? 'flex' : 'block'}\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  <a class=\\\"left carousel-control carousel-control-prev\\\"\\n     [class.disabled]=\\\"activeSlide === 0 && noWrap\\\"\\n     (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n      tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"right carousel-control carousel-control-next\\\"\\n     [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\"\\n     (click)=\\\"nextSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n     tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: CarouselConfig }, { type: ɵngcc0.NgZone }]; }, { indicatorsByChunk: [{\n            type: Input\n        }], itemsPerSlide: [{\n            type: Input\n        }], singleSlideOffset: [{\n            type: Input\n        }], isAnimated: [{\n            type: Input\n        }], activeSlideChange: [{\n            type: Output\n        }], slideRangeChange: [{\n            type: Output\n        }], startFromIndex: [{\n            type: Input\n        }], activeSlide: [{\n            type: Input\n        }], interval: [{\n            type: Input\n        }], noWrap: [{\n            type: Input\n        }], noPause: [{\n            type: Input\n        }], showIndicators: [{\n            type: Input\n        }], pauseOnFocus: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CarouselComponent.prototype.noWrap;\n    /** @type {?} */\n    CarouselComponent.prototype.noPause;\n    /** @type {?} */\n    CarouselComponent.prototype.showIndicators;\n    /** @type {?} */\n    CarouselComponent.prototype.pauseOnFocus;\n    /** @type {?} */\n    CarouselComponent.prototype.indicatorsByChunk;\n    /** @type {?} */\n    CarouselComponent.prototype.itemsPerSlide;\n    /** @type {?} */\n    CarouselComponent.prototype.singleSlideOffset;\n    /**\n     * Turn on/off animation. Animation doesn't work for multilist carousel\n     * @type {?}\n     */\n    CarouselComponent.prototype.isAnimated;\n    /**\n     * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\n     * @type {?}\n     */\n    CarouselComponent.prototype.activeSlideChange;\n    /**\n     * Will be emitted when active slides has been changed in multilist mode\n     * @type {?}\n     */\n    CarouselComponent.prototype.slideRangeChange;\n    /** @type {?} */\n    CarouselComponent.prototype.startFromIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.currentInterval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentActiveSlide;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._interval;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._chunkedSlides;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._slidesWithIndexes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype._currentVisibleSlidesIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.isPlaying;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CarouselComponent.prototype.destroyed;\n    /** @type {?} */\n    CarouselComponent.prototype.getActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.makeSlidesConsistent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CarouselComponent.prototype.ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SlideComponent {\n    /**\n     * @param {?} carousel\n     */\n    constructor(carousel) {\n        this.itemWidth = '100%';\n        this.order = 0;\n        /**\n         * Wraps element by appropriate CSS classes\n         */\n        this.addClass = true;\n        this.carousel = carousel;\n    }\n    /**\n     * Fires changes in container collection after adding a new slide instance\n     * @return {?}\n     */\n    ngOnInit() {\n        this.carousel.addSlide(this);\n        this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;\n    }\n    /**\n     * Fires changes in container collection after removing of this slide instance\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.carousel.removeSlide(this);\n    }\n}\nSlideComponent.ɵfac = function SlideComponent_Factory(t) { return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselComponent)); };\nSlideComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SlideComponent, selectors: [[\"slide\"]], hostVars: 13, hostBindings: function SlideComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-hidden\", !ctx.active);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.itemWidth)(\"order\", ctx.order);\n        ɵngcc0.ɵɵclassProp(\"item\", ctx.addClass)(\"carousel-item\", ctx.addClass)(\"active\", ctx.active)(\"carousel-animation\", ctx.isAnimated);\n    } }, inputs: { active: \"active\" }, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[1, \"item\"]], template: function SlideComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.active);\n    } }, styles: [\".carousel-animation[_nghost-%COMP%] {\\n       transition: opacity 0.6s ease, visibility 0.6s ease;\\n       float: left;\\n    }\\n    .carousel-animation.active[_nghost-%COMP%] {\\n      opacity: 1;\\n      visibility: visible;\\n    }\\n    .carousel-animation[_nghost-%COMP%]:not(.active) {\\n      display: block;\\n      position: absolute;\\n      opacity: 0;\\n      visibility: hidden;\\n    }\"] });\n/** @nocollapse */\nSlideComponent.ctorParameters = () => [\n    { type: CarouselComponent }\n];\nSlideComponent.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],\n    itemWidth: [{ type: HostBinding, args: ['style.width',] }],\n    order: [{ type: HostBinding, args: ['style.order',] }],\n    isAnimated: [{ type: HostBinding, args: ['class.carousel-animation',] }],\n    addClass: [{ type: HostBinding, args: ['class.item',] }, { type: HostBinding, args: ['class.carousel-item',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SlideComponent, [{\n        type: Component,\n        args: [{ selector: 'slide', template: `\n    <div [class.active]=\"active\" class=\"item\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                    '[attr.aria-hidden]': '!active'\n                }, styles: [\"\\n    :host.carousel-animation {\\n       transition: opacity 0.6s ease, visibility 0.6s ease;\\n       float: left;\\n    }\\n    :host.carousel-animation.active {\\n      opacity: 1;\\n      visibility: visible;\\n    }\\n    :host.carousel-animation:not(.active) {\\n      display: block;\\n      position: absolute;\\n      opacity: 0;\\n      visibility: hidden;\\n    }\\n  \"] }]\n    }], function () { return [{ type: CarouselComponent }]; }, { itemWidth: [{\n            type: HostBinding,\n            args: ['style.width']\n        }], order: [{\n            type: HostBinding,\n            args: ['style.order']\n        }], addClass: [{\n            type: HostBinding,\n            args: ['class.item']\n        }, {\n            type: HostBinding,\n            args: ['class.carousel-item']\n        }], active: [{\n            type: HostBinding,\n            args: ['class.active']\n        }, {\n            type: Input\n        }], isAnimated: [{\n            type: HostBinding,\n            args: ['class.carousel-animation']\n        }] }); })();\nif (false) {\n    /**\n     * Is current slide active\n     * @type {?}\n     */\n    SlideComponent.prototype.active;\n    /** @type {?} */\n    SlideComponent.prototype.itemWidth;\n    /** @type {?} */\n    SlideComponent.prototype.order;\n    /** @type {?} */\n    SlideComponent.prototype.isAnimated;\n    /**\n     * Wraps element by appropriate CSS classes\n     * @type {?}\n     */\n    SlideComponent.prototype.addClass;\n    /**\n     * Link to Parent(container-collection) component\n     * @type {?}\n     * @protected\n     */\n    SlideComponent.prototype.carousel;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CarouselModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return { ngModule: CarouselModule, providers: [] };\n    }\n}\nCarouselModule.ɵfac = function CarouselModule_Factory(t) { return new (t || CarouselModule)(); };\nCarouselModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });\nCarouselModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [SlideComponent, CarouselComponent],\n                exports: [SlideComponent, CarouselComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: function () { return [SlideComponent, CarouselComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SlideComponent, CarouselComponent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CarouselComponent, CarouselConfig, CarouselModule, SlideComponent };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}